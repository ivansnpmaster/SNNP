matrizB = matrix(data = c(1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0), ncol = 3, nrow = 4)
matrizB
matrizB[which(matrizB == 0)] = 10
matrizB
rownames(matrizB)
rownames(matrizB) = c("Ind1", "Ind2", "Ind3", "Ind4")
colnames(matrizB) = c("Var1", "Var2", "Var3")
matrizB
# Acessando o nome da coluna 2
colnames(matrizB)[2]
colnames(matrizB)[2] = "VarX"
matrizB
# Transpor matriz
transMatrizB = t(matrizB)
transMatrizB
dataFrameA = data.frame(variavel1 = c(1, 0, 1, 1), variavel2 = c(0, 0, 0, 1), variavel3 = c(1, 1, 0, 0))
dataFrame
dataFrameA
rownames(dataFrameA) = c("Ind1", "Ind2", "Ind3", "Ind4")
dataFrameA
dataFrameA
mtcars
# Exibindo as 6 primeiras linhas
head(mtcars)
dataFrameA
# Exibindo as 6 primeiras linhas
head(mtcars)
# Exibindo as 6 primeiras linhas
head(mtcars)
# Descobrindo as dimensões dos objetos com 'dim()'
dim(mtcars)
dataFrame_mtcars = mtcars
dataFrame_mtcars
str(dataFrame_mtcars)
# Descobrindo as dimensões dos objetos com 'dim()', (linhas, colunas)
dim(mtcars)
dataFrame_mtcars[c(2, 3, 4), c(5, 6, 7)]
# Acessando uma parte da data frame (recorte)
# Linhas 2, 3 e 4 com as colunas 5, 6 e 7
dataFrame_mtcars[c(2, 3, 4), c(5, 6, 7)]
manosSeisCilindros = dataFrame_mtcars[which(dataFrame_mtcars$cyl < 6), ]
manosSeisCilindros
menosSeisCilindros = dataFrame_mtcars[which(dataFrame_mtcars$cyl < 6), ]
menosSeisCilindros
menosSeisCilindros = dataFrame_mtcars[which(dataFrame_mtcars$cyl < 6), 3 : 7]
menosSeisCilindros
dataFrame_mtcars = dataFrame_mtcars[, c(4, 1, 2, 3, 5 : 11)]
head(dataFrame_mtcars)
dataFrame_mtcars = dataFrame_mtcars[, c(4, 1, 2, 3, 5 : ncol())]
dataFrame_mtcars = dataFrame_mtcars[, c(4, 1, 2, 3, 5 : ncol(dataFrame_mtcars))]
head(dataFrame_mtcars)
# Obtendo o número de linhas e colunas de um data frame
nrow(dataFrame_mtcars)
ncol(dataFrame_mtcars)
vetorExemplo = seq(from = 1, to = 100, by = 1)
matrizA = matrix(data = 1 : 9, nrow = 3, ncol = 3)
dataFrameA = mtcars
# Criando uma lista e dando os nomes que eu quero como parâmetros
listaA = list(vetor = vetorExemplo, matriz = matrizA, dataFrame = dataFrameA)
listaA
vetorExemplo = seq(from = 1, to = 100, by = 1)
matrizA = matrix(data = 1 : 9, nrow = 3, ncol = 3)
dataFrameA = mtcars
listaA = list(vetor = vetorExemplo, matriz = matrizA, dataFrame = dataFrameA)
listaA
# Acessando o vetor
listaA[1]
# Identificando valores dentro dos objetos nas listas
listaA[[1]]
# Identificando valores dentro dos objetos nas listas
# Indica que não trabalho com o nível 1, mas com os valores contidos nele
listaA[[1]][1 : 10]
# Identificando valores dentro dos objetos nas listas
# Indica que não trabalho com o nível 1, mas com os valores contidos nele
# Acessando os 10 primeiros elementos
listaA[[1]][1 : 10]
listaA[[3]][1: 3, 1 : 5]
# Identificando valores dentro dos objetos nas listas
# Indica que não trabalho com o nível 1, mas com os valores contidos nele
# Acessando os 10 primeiros elementos e colocando 'NA'
listaA[[1]][1 : 10] = NA
# Acessando o vetor
listaA[1]
class(listaA)
str(listaA)
length(listaA)
# Acessando o número de elementos no primeiro nível
length(listaA[[1]])
# Acessando o número de elementos na coluna cilindro
length(dataFrame_mtcars$cyl)
names(listaA)
names(dataFrame_mtcars)
# Acessando os nomes das colunas
names(dataFrame_mtcars)
matrizC = matrix(data = c(1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0), ncol = 3, nrow = 4)
matrizC
# Agora com a combinação
matrizC = matrix(data = c(1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0), ncol = 3, nrow = 4,
list(c("Ind1", "Ind2", "Ind3", "Ind4"), C("Var1", "Var2", "Var3")))
# Agora com a combinação
matrizC = matrix(data = c(1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0), ncol = 3, nrow = 4,
dimnames = list(c("Ind1", "Ind2", "Ind3", "Ind4"), C("Var1", "Var2", "Var3")))
# Agora com a combinação
matrizC = matrix(data = c(1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0), ncol = 3, nrow = 4,
dimnames = list(c("Ind1", "Ind2", "Ind3", "Ind4"), c("Var1", "Var2", "Var3")))
matrizC
data(cars)
plot(cars)
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
setwd(dir = "C:\\Users\\ivanr\\Desktop\\GitHub\\SNNP\\SNNP_Test\\bin\\Debug")
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
setwd(dir = "C:\\Users\\ivanr\\Desktop\\GitHub\\SNNP\\SNNP_Test\\bin\\Debug")
getwd()
setwd(dir = "C:\\Users\\ivanr\\Desktop\\SNNP\\SNNP_Test\\bin\\Debugg")
setwd(dir = "C:\\Users\\ivanr\\Desktop\\SNNP\\SNNP_Test\\bin\\Debugg")
setwd(dir = "C:\\Users\\ivanr\\Desktop\\SNNP\\SNNP_Test\\bin\\Debug")
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
min(y)
setwd(dir = "C:\\Users\\ivanr\\Desktop\\SNNP\\SNNP_Test\\bin\\Debug")
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
min(y)
setwd(dir = "C:\\Users\\ivanr\\Desktop\\SNNP\\SNNP_Test\\bin\\Debug")
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F, sep = " ")
xx = dataset[,1]
yy = dataset[,2]
zz = dataset[,3]
plot(xx, yy, col=rgb(zz, 0, 0))
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F, sep = " ")
xx = dataset[,1]
yy = dataset[,2]
zz = dataset[,3]
plot(xx, yy, col=rgb(zz, 0, 0), pch=15)
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F, sep = " ")
xx = dataset[,1]
yy = dataset[,2]
zz = dataset[,3]
plot(xx, yy, col=rgb(zz, 0, 0), pch=15)
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F, sep = " ")
xx = dataset[,1]
yy = dataset[,2]
zz = dataset[,3]
plot(xx, yy, col=rgb(zz, 0, 0), pch=15,
xlab = "x1", ylab = "x2")
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F, sep = " ")
xx = dataset[,1]
yy = dataset[,2]
zz = dataset[,3]
plot(xx, yy, col=rgb(zz, 0, 0), pch=15,
xlab = "x1", ylab = "x2", main = "XOR solution")
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[1:10, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : 10)
y = dataset[1:10, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F, sep = " ")
xx = dataset[,1]
yy = dataset[,2]
zz = dataset[,3]
plot(xx, yy, col=rgb(zz, 0, 0), pch=15,
xlab = "x1", ylab = "x2", main = "XOR solution")
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F, sep = " ")
xx = dataset[,1]
yy = dataset[,2]
zz = dataset[,3]
plot(xx, yy, col=rgb(zz, 0, 0), pch=15,
xlab = "x1", ylab = "x2", main = "XOR solution")
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F, sep = " ")
xx = dataset[,1]
yy = dataset[,2]
zz = dataset[,3]
plot(xx, yy, col=rgb(zz, 0, 0), pch=15,
xlab = "x1", ylab = "x2", main = "XOR solution")
plot(xx, yy, col=rgb(zz, 0, 0), pch=15,
xlab = "x1", ylab = "x2", main = "XOR solution")
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F, sep = " ")
xx = dataset[,1]
yy = dataset[,2]
zz = dataset[,3]
plot(xx, yy, col=rgb(zz, 0, 0), pch=15,
xlab = "x1", ylab = "x2", main = "XOR solution")
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F, sep = " ")
xx = dataset[,1]
yy = dataset[,2]
zz = dataset[,3]
plot(xx, yy, col=rgb(zz, 0, 0), pch=15,
xlab = "x1", ylab = "x2", main = "XOR solution")
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F, sep = " ")
xx = dataset[,1]
yy = dataset[,2]
zz = dataset[,3]
plot(xx, yy, col=rgb(zz, 0, 0), pch=15,
xlab = "x1", ylab = "x2", main = "XOR solution")
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F, sep = " ")
xx = dataset[,1]
yy = dataset[,2]
zz = dataset[,3]
plot(xx, yy, col=rgb(zz, 0, 0), pch=15,
xlab = "x1", ylab = "x2", main = "XOR solution")
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F, sep = " ")
xx = dataset[,1]
yy = dataset[,2]
zz = dataset[,3]
plot(xx, yy, col=rgb(zz, 0, 0), pch=15,
xlab = "x1", ylab = "x2", main = "XOR solution")
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
min(y)
max(y)
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
max(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
min(y)
dataset = read.table("Test.txt", header = F, dec = ",", stringsAsFactors = F)
x = c(1 : nrow(dataset))
y = dataset[, 1]
min(y)
plot(x, y,
xlab = "Iterations", ylab = "Mean squared error",
main = "Error x iter",
type = "l", col = "red",
panel.first = grid())
nrow(dataset)
